@model FustWebApp.Models.Domain.Loads
@{
	ViewData["Title"] = $"Receive Load {@Model.LoadTrailerNumber}";
	Layout = "~/Views/Shared/_LoadLayout.cshtml";
}

@using (Html.BeginForm("ReceiveLoad", "Load", HttpMethod.Post))
{
	@Html.HiddenFor(model=>model.LoadTrailerNumber)
	@Html.HiddenFor(model=>model.LoadDate)


	@Html.HiddenFor(model=>model.LoadSupplier.FustTypeList)

	@Html.HiddenFor(model=>model.LoadSupplier.SupplierGroup)

	@Html.HiddenFor(model=>model.LoadSupplier.Id)
	@Html.HiddenFor(model=>model.LoadSupplier.SupplierAddress)
	@Html.HiddenFor(model=>model.LoadSupplier.SupplierOrigin)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyTargetName)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyTargetNameAbrevation)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyAbrevation)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyCountryCode)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyExchangeRate)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyName)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.currencyId)
	@Html.HiddenFor(model=>model.LoadSupplier.Currency.exchangeRateYear)




	<div class="d-flex flex-row flex-row-reverse mb-3">
		<div class="mx-2">
			<a class="btn btn-sm btn-outline-dark shadow" asp-area="Admin" asp-controller="Load" asp-action="Index">Back</a>
		</div>
		<div class="mx-2">
			@if (!User.IsInRole("Operations"))
			{
				<a class="btn btn-outline-success btn-sm shadow" href="../EditLoad/@Model.LoadId">Edit Load</a>
			}
		</div>

		<div class="mx-2">
			<input type="submit" class="btn btn-outline-danger btn-sm shadow" value="Save Load">
		</div>
	</div>

	<div class="container mb-4">
		<div class="row ">
			<div class="col-md-6">
				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadId, htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadId)
						<input value="@Model.LoadId" class="form-control" readonly>
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadSupplier.SupplierName, htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadSupplier.SupplierName)
						<input value="@Model.LoadSupplier.SupplierName" class="form-control" readonly>
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadGroup, htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadGroup)
						<input value="@Model.LoadGroup" class="form-control" readonly>
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadType,  htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadType)
						<input value="@Model.LoadType" class="form-control placeholder-glow" readonly>
						@Html.ValidationMessageFor(model=>model.LoadType, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.PONumber,  htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.PONumber)
						<input value="@Model.PONumber" class="form-control" readonly>
						*only for Inbound Loads
						@Html.ValidationMessageFor(model=>model.PONumber, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.CreatedDate,"Created Date & Time", htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.CreatedDate)
						<input value="@Model.CreatedDate" class="form-control" readonly>Created by @Model.CreatedBy
					</div>
				</div>
			</div>

			<div class="col-md-6">
				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadDate,   htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadDate)
						<input value="@Model.LoadDate.Date.ToShortDateString()" class="form-control" type="text" readonly>
						@Html.ValidationMessageFor(model=>model.PONumber, "", new { @class = "text-danger" })
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadOrigin, htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadOrigin)
						<input type="text" value="@Model.LoadOrigin" class="form-control" readonly>
					</div>
				</div>

				<div class="row mb-3">
					@Html.LabelFor(model=>model.LoadComment, htmlAttributes:new {@class="col-form-label col-4"})
					<div class="col-auto">
						@Html.HiddenFor(model=>model.LoadComment)
						<textarea type="text" class="form-control" readonly style="height: 130px;display:block">@Model.LoadComment</textarea>
					</div>
				</div>
				@if (Model.LoadUpdatedDate > Model.CreatedDate)
				{
					<div class="row mb-3">
						@Html.LabelFor(model=>model.LoadUpdatedDate,"Last Update On", htmlAttributes:new {@class="col-form-label col-4"})
						<div class="col-auto">
							<input value="@Model.LoadUpdatedDate" class="form-control" readonly> Updated by @Model.UpdatedBy
						</div>
					</div>
				}

				@if (Model.ReceivedDate > Model.CreatedDate)
				{
					<div class="row mb-3">
						@Html.LabelFor(model=>model.ReceivedDate,"Load Received On", htmlAttributes:new {@class="col-form-label col-4"})
						<div class="col-auto">
							<input value="@Model.ReceivedDate" class="form-control" readonly> Received by @Model.ReceivedBy
						</div>
					</div>
				}
			</div>
		</div>
	</div>


	<table class="table text-sm-center w-50 shadow">
		<thead class="table-dark">
			<tr>
				<th hidden>Fust Item Id</th>
				<th>Fust Type:</th>
				<th>Fust Name</th>
				<th>Expected Quantity:</th>
				<th>Received Quantity:</th>
				<th>Storage Quantity:</th>
			</tr>
		</thead>
		<tbody>
			@for (int i = 0; i < Model.LoadFustItems.Count; i++)
			{
				<tr>
					<td hidden>
						@Html.HiddenFor(model=>model.LoadFustItems[i].LoadFustId)
						@Model.LoadFustItems[i].LoadFustId
					</td>
					<td>
						@Html.HiddenFor(model=>model.LoadFustItems[i].FustType.FustTypeName)
						@Model.LoadFustItems[i].FustType.FustTypeName
					</td>
					<td>
						@Html.HiddenFor(model=>model.LoadFustItems[i].FustName)
						@Model.LoadFustItems[i].FustName
					</td>
					<td width="200">
						@Html.HiddenFor(model=>model.LoadFustItems[i].ExpectedQuantity)
						@Html.EditorFor(model=>model.LoadFustItems[i].ExpectedQuantity, new { htmlattributes =new{@class="form-control", @disabled="disabled"}})
						@Html.ValidationMessageFor(model=>model.LoadFustItems[i].ExpectedQuantity,"",new{@class ="text-danger"})

					</td>
					<td width="200">
						@Html.EditorFor(model=>model.LoadFustItems[i].ReceivedQty, new { htmlattributes =new{@class="form-control"}})
						@Html.ValidationMessageFor(model=>model.LoadFustItems[i].ReceivedQty,"",new{@class ="text-danger"})
					</td>
					<td width="200">
						@Html.EditorFor(model=>model.LoadFustItems[i].StorageQty,new {htmlAttributes = new {@class="form-control",@placeholder="0",@type="number"}})
						@Html.ValidationMessageFor(model=>model.LoadFustItems[i].StorageQty,"",new{@class ="text-danger"})
					</td>
				</tr>
			}
		</tbody>
	</table>
}